#!/bin/sh

set -eu

PROGRAM=linode-delete
LINODE_LABEL=
LINODE_API_TOKEN="${LINODE_API_TOKEN:-}"
NO_CHECK=
LINODE_ID=
OUTPUT_PATH=
QUIET=
JQ_EXEC="${JQ_EXEC:-jq}"
LINODE_API_EXEC="${LINODE_API_EXEC:-linode-api}"
LINODE_QUERY_EXEC="${LINODE_QUERY_EXEC:-linode-query}"

usage() {
  cat <<EOF
Usage: $PROGRAM [OPTIONS] LABEL

Delete linode instance.

Arguments:
  LABEL                    Instance label (required)

Options:
  -k, --api-token=TOKEN    API token (required)
  -n, --no-check           Don't check for existing instance
  -i, --id=ID              Instance ID (required if --no-check)
  -o, --output=FILE        Write output as shell variables to FILE
  -q, --quiet              Suppress output
  -h, --help               This help text

Enviroment variables:
  LINODE_API_TOKEN         See --token
  CURL_EXEC                Path to curl
  JQ_EXEC                  Path to jq
  LINODE_API_EXEC          Path to linode-api
  LINODE_QUERY_EXEC        Path to linode-query
EOF
}

error() {
  [ $# -gt 0 ] && echo >&2 "$PROGRAM:" "$@"
  echo >&2 "Try '$PROGRAM --help' for more information."
  exit 1
}

jq() {
  command "$JQ_EXEC" "$@"
}

linode_api() {
  command "$LINODE_API_EXEC" "$@"
}

linode_query() {
  command "$LINODE_QUERY_EXEC" "$@"
}

out() {
  [ -n "$QUIET" ] || echo "$@"
}

opts="$(
  getopt -n "$PROGRAM" -o k:ni:o:qh \
    -l api-token:,no-check,id:,output:,quiet,help -- "$@"
)" || error
# shellcheck disable=SC2086
eval set -- $opts

while [ $# -gt 0 ]; do
  ARG="$1"
  shift
  case "$ARG" in
  -k | --api-token)
    LINODE_API_TOKEN="$1"
    shift
    ;;
  -n | --no-check)
    NO_CHECK=1
    ;;
  -i | --id)
    LINODE_ID="$1"
    shift
    ;;
  -o | --output)
    OUTPUT_PATH="$1"
    shift
    ;;
  -q | --quiet)
    QUIET=1
    ;;
  -h | --help)
    usage
    exit 0
    ;;
  --)
    if [ $# -eq 1 ]; then
      LINODE_LABEL="$1"
      shift
    elif [ $# -gt 1 ]; then
      error "unexpected argument '$2'"
    fi
    ;;
  *)
    error "unexpected option '$ARG'"
    ;;
  esac
done

[ -z "$LINODE_LABEL" ] && error "missing LABEL"
[ -z "$LINODE_API_TOKEN" ] && error "missing --api-token=TOKEN"

which "$JQ_EXEC" >/dev/null || error "jq not found"
which "$LINODE_API_EXEC" >/dev/null || error "linode-api not found"

if [ "$OUTPUT_PATH" = - ]; then
  OUTPUT_PATH=/dev/stdout
  QUIET=1
fi

export LINODE_API_TOKEN

tmp="$(mktemp)"

trap 'rm -f -- "$tmp"' EXIT

if [ -n "$NO_CHECK" ]; then

  [ -n "$LINODE_ID" ] || error "missing --id=ID"

else

  out -n "Querying instance $LINODE_LABEL..."

  linode_query -qo "$tmp" "$LINODE_LABEL" || true

  eval "$(grep -E '^LINODE_(API_OK|API_ERROR|ID)=' "$tmp")"

  if [ -n "$LINODE_API_OK" ]; then
    out ok
  else
    if [ "$LINODE_API_ERROR" = "Not found" ]; then
      out not found
    else
      out error
    fi
    if [ -n "$OUTPUT_PATH" ]; then
      head -4 "$tmp" >"$OUTPUT_PATH"
      echo "LINODE_DELETE='no'" >>"$OUTPUT_PATH"
    fi
    exit 1
  fi

fi

out -n "Deleting instance $LINODE_LABEL..."

linode_api -m DELETE "/linode/instances/$LINODE_ID" >"$tmp"

# shellcheck disable=SC2016
delete_filter='@sh "LINODE_API_OK=\(
  if .errors[0].reason then "" else "1" end)
LINODE_API_ERROR=\(.errors[0].reason // "")
LINODE_LABEL=\($label_)
LINODE_ID=\($id)
LINODE_DELETE=\(if .errors[0].reason then "" else "1" end)"'

output="$(jq --arg label_ "$LINODE_LABEL" --arg id "$LINODE_ID" \
  -r "$delete_filter" "$tmp")"

[ -n "$OUTPUT_PATH" ] && echo "$output" >"$OUTPUT_PATH"

eval "$(echo "$output" | grep -E '^LINODE_(API_OK|API_ERROR)=')"

if [ -n "$LINODE_API_OK" ]; then
  out ok
  exit 0
else
  out error
  out "Error: $LINODE_API_ERROR"
  exit 1
fi
