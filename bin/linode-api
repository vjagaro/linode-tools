#!/bin/sh

set -eu

PROGRAM=linode-api
LINODE_API_TOKEN="${LINODE_API_TOKEN:-}"
LINODE_API_PATH=
LINODE_API_BODY=
LINODE_API_FILTER=
LINODE_API_METHOD=GET
LINODE_API_PREFIX="${LINODE_API_PREFIX:-https://api.linode.com/v4}"
CURL_EXEC="${CURL_EXEC:-curl}"
JQ_EXEC="${JQ_EXEC:-jq}"

usage() {
  cat <<EOF
Usage: $PROGRAM [OPTIONS] PATH

Query Linode API and output JSON, even under error conditions.

This program will always exit with return code 0 unless it is called with
invalid arguments.

See https://www.linode.com/docs/api for more information.

Arguments:
  PATH                     Path appended to URL prefix (required)

Options:
  -k, --api-token=TOKEN    API token (required)
  -b, --body=BODY          JSON body (default none)
  -f, --filter=FILTER      JSON filter (default none)
  -m, --method=METHOD      HTTP method (default $LINODE_API_METHOD)
  -p, --prefix=PREFIX      URL prefix (default $LINODE_API_PREFIX)
  -h, --help               This help text

Enviroment variables:
  LINODE_API_TOKEN         See --token
  LINODE_API_PREFIX        See --prefix
  CURL_EXEC                Path to curl
  JQ_EXEC                  Path to jq

Examples:
  \$ export LINODE_API_TOKEN=...
  \$ $PROGRAM /profile
  {"uid": 1234, ...}

  \$ body='{"label": "abc", "type": "g6-nanode-1", "region": "us-west"}'
  \$ $PROGRAM -m POST -b "\$body" /linode/instances
  {"id": 36429850, "label": "abc", ...}

  \$ $PROGRAM /unknown/path
  {"errors": [{"reason": "Not found"}]}
EOF
}

curl() {
  command "$CURL_EXEC" "$@"
}

error() {
  [ $# -gt 0 ] && echo >&2 "$PROGRAM:" "$@"
  echo >&2 "Try '$PROGRAM --help' for more information."
  exit 1
}

jq() {
  command "$JQ_EXEC" "$@"
}

make_error() {
  # shellcheck disable=SC2016
  jq -cn --arg reason "$*" '{ "errors": [ { "reason": $reason } ] }'
}

opts="$(
  getopt -n "$PROGRAM" -o k:b:f:m:p:h \
    -l api-token:,body:,filter:,method:,prefix:,help -- "$@"
)" || error
# shellcheck disable=SC2086
eval set -- $opts

while [ $# -gt 0 ]; do
  ARG="$1"
  shift
  case "$ARG" in
  -k | --api-token)
    LINODE_API_TOKEN="$1"
    shift
    ;;
  -b | --body)
    LINODE_API_BODY="$1"
    shift
    ;;
  -f | --filter)
    LINODE_API_FILTER="$1"
    shift
    ;;
  -m | --method)
    LINODE_API_METHOD="$1"
    shift
    ;;
  -p | --prefix)
    LINODE_API_PREFIX="$1"
    shift
    ;;
  -h | --help)
    usage
    exit 0
    ;;
  --)
    if [ $# -eq 1 ]; then
      LINODE_API_PATH="$1"
      shift
    elif [ $# -gt 1 ]; then
      error "unexpected argument '$2'"
    fi
    ;;
  *)
    error "unexpected option '$ARG'"
    ;;
  esac
done

[ -z "$LINODE_API_PATH" ] && error "missing PATH"
[ -z "$LINODE_API_TOKEN" ] && error "missing --api-token=TOKEN"

which "$CURL_EXEC" >/dev/null || error "curl not found"
which "$JQ_EXEC" >/dev/null || error "jq not found"

tmp_output="$(mktemp)"
tmp_stderr="$(mktemp)"

trap 'rm -f -- "$tmp_output" "$tmp_stderr"' EXIT

set -- "-sS" "-o" "$tmp_output" \
  -H "Authorization: Bearer $LINODE_API_TOKEN" \
  -H "Content-type: application/json"

[ -n "$LINODE_API_BODY" ] && set -- "$@" -d "$LINODE_API_BODY"
[ -n "$LINODE_API_FILTER" ] && set -- "$@" -H "X-Filter: $LINODE_API_FILTER"
[ -n "$LINODE_API_METHOD" ] && set -- "$@" -X "$LINODE_API_METHOD"
set -- "$@" "${LINODE_API_PREFIX}${LINODE_API_PATH}"

set +e
curl "$@" 2>"$tmp_stderr"
result=$?
set -e

if [ $result != 0 ]; then
  if [ -s "$tmp_stderr" ]; then
    make_error "$(cat "$tmp_stderr")"
  else
    make_error "Unknown error"
  fi
else
  if [ -s "$tmp_output" ]; then
    cat "$tmp_output"
  else
    make_error "No data"
  fi
fi

exit 0
